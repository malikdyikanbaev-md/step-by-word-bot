import telebot
from telebot import types
import schedule
import time
import threading
import traceback
import os

# üîë –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (–ë–ï–ó –¢–û–ö–ï–ù–ê –í –ö–û–î–ï!)
TOKEN = os.getenv("TOKEN")  # ‚Üê –¢–ê–ö –ü–†–ê–í–ò–õ–¨–ù–û!
bot = telebot.TeleBot(TOKEN)

# üìò –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤ (30 —à—Ç—É–∫ –Ω–∞ –º–µ—Å—è—Ü)
words = [
    {"word": "resilience", "transcription": "[r…™Ààz…™l.j…ôns]", "translation": "—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å, –∂–∏–∑–Ω–µ—Å—Ç–æ–π–∫–æ—Å—Ç—å"},
    {"word": "horizon", "transcription": "[h…ôÀàra…™.z…ôn]", "translation": "–≥–æ—Ä–∏–∑–æ–Ω—Ç"},
    {"word": "wander", "transcription": "[Ààw…ín.d…ôr]", "translation": "–±—Ä–æ–¥–∏—Ç—å, —Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ–≤–∞—Ç—å"},
    {"word": "fleeting", "transcription": "[ÀàfliÀê.t…™≈ã]", "translation": "–º–∏–º–æ–ª—ë—Ç–Ω—ã–π"},
    {"word": "ember", "transcription": "[Àà…õm.b…ôr]", "translation": "—É–≥–æ–ª—ë–∫, —Ç–ª–µ—é—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫"},
    {"word": "serenity", "transcription": "[s…ôÀàren.…ô.ti]", "translation": "—Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ"},
    {"word": "gratitude", "transcription": "[Àà…°r√¶t.…™.tjuÀêd]", "translation": "–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å"},
    {"word": "perseverance", "transcription": "[Àåp…úÀê.s…™Ààv…™…ô.r…ôns]", "translation": "–Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å"},
    {"word": "ephemeral", "transcription": "[…™Ààfem.…ôr.…ôl]", "translation": "–Ω–µ–¥–æ–ª–≥–æ–≤–µ—á–Ω—ã–π"},
    {"word": "diligence", "transcription": "[Ààd…™l.…™.d í…ôns]", "translation": "—É—Å–µ—Ä–¥–∏–µ"},
    {"word": "humility", "transcription": "[hjuÀêÀàm…™l.…™.ti]", "translation": "—Å–∫—Ä–æ–º–Ω–æ—Å—Ç—å, —Å–º–∏—Ä–µ–Ω–∏–µ"},
    {"word": "ambition", "transcription": "[√¶mÀàb…™ É.…ôn]", "translation": "—Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ, –∞–º–±–∏—Ü–∏—è"},
    {"word": "wisdom", "transcription": "[Ààw…™z.d…ôm]", "translation": "–º—É–¥—Ä–æ—Å—Ç—å"},
    {"word": "freedom", "transcription": "[ÀàfriÀê.d…ôm]", "translation": "—Å–≤–æ–±–æ–¥–∞"},
    {"word": "hope", "transcription": "[h…ô äp]", "translation": "–Ω–∞–¥–µ–∂–¥–∞"},
    {"word": "courage", "transcription": "[Ààk år.…™d í]", "translation": "—Å–º–µ–ª–æ—Å—Ç—å"},
    {"word": "legacy", "transcription": "[Ààle…°.…ô.si]", "translation": "–Ω–∞—Å–ª–µ–¥–∏–µ"},
    {"word": "patience", "transcription": "[Ààpe…™. É…ôns]", "translation": "—Ç–µ—Ä–ø–µ–Ω–∏–µ"},
    {"word": "kindness", "transcription": "[Ààka…™nd.n…ôs]", "translation": "–¥–æ–±—Ä–æ—Ç–∞"},
    {"word": "compassion", "transcription": "[k…ômÀàp√¶ É.…ôn]", "translation": "—Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ"},
    {"word": "destiny", "transcription": "[Ààdes.t…™.ni]", "translation": "—Å—É–¥—å–±–∞"},
    {"word": "strength", "transcription": "[stre≈ãkŒ∏]", "translation": "—Å–∏–ª–∞"},
    {"word": "journey", "transcription": "[Ààd í…úÀê.ni]", "translation": "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ"},
    {"word": "purpose", "transcription": "[Ààp…úÀê.p…ôs]", "translation": "—Ü–µ–ª—å, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ"},
    {"word": "balance", "transcription": "[Ààb√¶l.…ôns]", "translation": "–±–∞–ª–∞–Ω—Å, —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ"},
    {"word": "growth", "transcription": "[…°r…ô äŒ∏]", "translation": "—Ä–æ—Å—Ç, —Ä–∞–∑–≤–∏—Ç–∏–µ"},
    {"word": "vision", "transcription": "[Ààv…™ í.…ôn]", "translation": "–≤–∏–¥–µ–Ω–∏–µ"},
    {"word": "focus", "transcription": "[Ààf…ô ä.k…ôs]", "translation": "—Ñ–æ–∫—É—Å, —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω–Ω–æ—Å—Ç—å"},
    {"word": "faith", "transcription": "[fe…™Œ∏]", "translation": "–≤–µ—Ä–∞"},
    {"word": "unity", "transcription": "[ÀàjuÀê.n…ô.ti]", "translation": "–µ–¥–∏–Ω—Å—Ç–≤–æ"}
]

current_index = 0
CHAT_ID = None

# üîî –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ª–æ–≤–∞
def send_word(chat_id):
    global current_index
    try:
        word = words[current_index]
        text = (
            "‚ú® –°–ª–æ–≤–æ –¥–Ω—è ‚ú®\n\n"
            f"{word['word']} {word['transcription']}\n"
            f"üá∑üá∫ {word['translation']}"
        )
        bot.send_message(chat_id, text)
        print(f"[INFO] Sent '{word['word']}' to {chat_id} (index {current_index}).")
        current_index = (current_index + 1) % len(words)
    except Exception as e:
        print("[ERROR] send_word exception:", e)
        traceback.print_exc()

# üïí –ê–≤—Ç–æ-—Ä–∞—Å—Å—ã–ª–∫–∞ –≤ 10:00
def scheduled_word():
    if CHAT_ID:
        send_word(CHAT_ID)
    else:
        print("[INFO] scheduled_word: CHAT_ID not set. Send /start to register chat id.")

schedule.every().day.at("10:00").do(scheduled_word)

def schedule_checker():
    while True:
        schedule.run_pending()
        time.sleep(1)

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=schedule_checker, daemon=True).start()

# üîπ /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    global CHAT_ID
    CHAT_ID = message.chat.id
    print(f"[INFO] /start from {CHAT_ID}")

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–•–æ—á—É –≤—ã—É—á–∏—Ç—å –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ"))

    bot.send_message(message.chat.id, 
        "–ü—Ä–∏–≤–µ—Ç üëã –Ø —Ç–≤–æ–π –±–æ—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å–ª–æ–≤!\n"
        "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00 —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ —Å–ª–æ–≤–æ.",
        reply_markup=markup
    )

# üîπ –ö–Ω–æ–ø–∫–∞
@bot.message_handler(func=lambda message: message.text and "—Ö–æ—á—É" in message.text.lower() and "—Å–ª–æ–≤–æ" in message.text.lower())
def handle_button(message):
    send_word(message.chat.id)

# üîπ /word
@bot.message_handler(commands=['word'])
def cmd_word(message):
    send_word(message.chat.id)

# üîπ –í—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ
@bot.message_handler(func=lambda message: True)
def handle_other(message):
    bot.reply_to(message, "–ù–∞–∂–º–∏—Ç–µ '–•–æ—á—É –≤—ã—É—á–∏—Ç—å –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ' –∏–ª–∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ —É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–ª–æ–≤–æ –≤ 10:00!")
    print(f"[INFO] Unknown message from {message.chat.id}: {message.text}")

if __name__ == "__main__":
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Railway...")
    bot.infinity_polling()